{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Assignment APIs",
    "description": "",
    "contact": {
      "name": "Raj Karmakar",
      "email": "97rajmath@gmail.com"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/fetch-data": {
      "get": {
        "tags": [
          "Data Retrieval API"
        ],
        "summary": "Retrieves data from Public API",
        "description": "This API fetches data from Public API and filters them by Category \r \t\t\t\t\t\t\t\t\t& returns result within given Limit",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched data successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "SUCCESS"
                },
                "result": {
                  "type": "object",
                  "properties": {}
                },
                "code": {
                  "type": "number",
                  "example": 200
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized. No Authorization token found.",
            "schema": {
              "$ref": "#/definitions/errorResponse.401"
            }
          },
          "403": {
            "description": "Forbidden. Access is denied. Authorization token is invalid",
            "schema": {
              "$ref": "#/definitions/errorResponse.403"
            }
          },
          "500": {
            "description": "Something went wrong. Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/errorResponse.500"
            }
          }
        }
      }
    },
    "/post": {
      "get": {
        "tags": [
          "GetPosts"
        ],
        "summary": "This is a demo API for retreiving Posts.",
        "description": "This API is only works for authorized users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "SUCCESS"
                },
                "result": {
                  "type": "object",
                  "properties": {}
                },
                "code": {
                  "type": "number",
                  "example": 200
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized. No Authorization token found.",
            "schema": {
              "$ref": "#/definitions/errorResponse.401"
            }
          },
          "403": {
            "description": "Forbidden. Access is denied. Authorization token is invalid",
            "schema": {
              "$ref": "#/definitions/errorResponse.403"
            }
          }
        }
      }
    },
    "/auth/registration": {
      "post": {
        "summary": "Registration API",
        "description": "This API registers new users.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "409": {
            "description": "username already exists"
          },
          "500": {
            "description": "Something went wrong. Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/errorResponse.500"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login API",
        "description": "This API logs in existing users.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User successfully logged in"
                },
                "results": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": ""
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "code": {
                  "type": "number",
                  "example": 200
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Password is Invalid",
            "schema": {
              "$ref": "#/definitions/errorResponse.400"
            }
          },
          "404": {
            "description": "No such user exists",
            "schema": {
              "$ref": "#/definitions/errorResponse.404"
            }
          },
          "500": {
            "description": "Something went wrong. Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/errorResponse.500"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "delete": {
        "summary": "Logout API",
        "description": "This API logs out existing users.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User has been logged out successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User has been logged out successfully."
                },
                "results": {},
                "code": {
                  "type": "number",
                  "example": 204
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "successResponse.200": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": ""
        },
        "data": {
          "type": "number",
          "example": 0
        }
      }
    },
    "errorResponse.400": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "Bad request"
        }
      }
    },
    "errorResponse.401": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "401"
        },
        "message": {
          "type": "string",
          "example": "Unauthorized"
        }
      }
    },
    "errorResponse.403": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "403"
        },
        "message": {
          "type": "string",
          "example": "Forbidden. Access is Denied."
        }
      }
    },
    "errorResponse.404": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Not found"
        }
      }
    },
    "errorResponse.500": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    }
  }
}